---
import { getUrlRelativeToBase } from '@/lib/utils';
import Icon from '@/components/block/Icon.astro';
import '@/styles/global.css';

interface Props {
  title?: string;
  tagline?: string;
  taglineIconName?: any;
  description?: string;
  primaryButtonText?: string;
  primaryButtonHref?: string;
  primaryButtonIconName?: any;
  secondaryButtonText?: string;
  secondaryButtonHref?: string;
  secondaryButtonIconName?: any;
  layout?: 'centered' | 'split';
  isDark?: boolean;
  titleClasses? : string;
  descriptionClasses? : string;
  className?: string;
}

const { 
  title = "Action-driving headline that creates urgency",
  tagline = "Call to action",
  taglineIconName,
  description = "Add one or two compelling sentences that reinforce your main value proposition and overcome final objections. End with a clear reason to act now.",
  primaryButtonText,
  primaryButtonHref = "#",
  primaryButtonIconName,
  secondaryButtonText,
  secondaryButtonHref = "#",
  secondaryButtonIconName,
  layout = 'centered',
  isDark = false,
  titleClasses = "text-4xl md:text-6xl pb-1 m-0 font-white bg-clip-text text-transparent bg-gradient-to-r " + (isDark ? "from-background to-background/70" : "from-foreground to-foreground/70"),
  descriptionClasses = "text-xl leading-relaxed m-0 " + (isDark ? "text-muted-background" : "text-muted-foreground"),
  className = '',
} = Astro.props;

const sectionClasses = [
  'cta-section',
  `layout-${layout}`,
  className
].filter(Boolean).join(' ');

---

<section class={`relative overflow-hidden ${sectionClasses}`}>
  <div class="container mx-auto px-6 py-8">
    {layout === 'centered' && (
      <div class="flex flex-col items-center text-center max-w-3xl mx-auto gap-8">
        {tagline && (
          <div class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-muted text-foreground border border-border w-fit">
            {taglineIconName && (
              <div class="pr-2">
                <Icon name={taglineIconName} class="w-4 h-4"/>
              </div>
            )}
            {tagline}
          </div>
        )}
        
        {title && (
          <h1 class={titleClasses}>
            {title}
          </h1>
        )}
        
        {description && (
          <p class={descriptionClasses}>
            {description}
          </p>
        )}
        
        <div class="flex gap-4 items-center flex-wrap justify-center">
          {primaryButtonText && (
            <a href={getUrlRelativeToBase(primaryButtonHref)} class="inline-flex items-center gap-2 px-8 py-3 rounded-lg font-semibold no-underline transition-all duration-200 whitespace-nowrap bg-primary text-primary-foreground border border-primary shadow-sm hover:bg-primary/90 hover:-translate-y-0.5 hover:shadow-md">
              {primaryButtonIconName && (
                <Icon name={primaryButtonIconName} class="w-4 h-4" />
              )}
              {primaryButtonText}
            </a>
          )}
          
          {secondaryButtonText && (
            <a href={getUrlRelativeToBase(secondaryButtonHref)} class="inline-flex items-center gap-2 px-8 py-3 rounded-lg font-semibold no-underline transition-all duration-200 whitespace-nowrap bg-transparent text-foreground border border-border hover:bg-muted hover:-translate-y-0.5">
              {secondaryButtonIconName && (
                <Icon name={secondaryButtonIconName} class="w-4 h-4" />
              )}
              {secondaryButtonText}
            </a>
          )}
          
          <!-- Custom slot for additional actions -->
          <div class="flex gap-4 items-center">
            <slot />
          </div>
        </div>
      </div>
    )}
    
    {layout === 'split' && (
      <>
        <div class="flex flex-col items-center text-center max-w-3xl mx-auto gap-8">
          {tagline && (
            <div class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-muted text-foreground border border-border w-fit">
              {taglineIconName && (
                <div class="pr-2"><Icon name={taglineIconName} /></div>
              )}
              {tagline}
            </div>
          )}
        </div>

        <div class="flex justify-between items-center gap-16 max-w-7xl mx-auto pt-4 lg:flex-row flex-col lg:text-left text-center lg:gap-16 gap-8">
          <div class="lg:flex-[3] flex flex-col gap-6">
            {title && (
              <h1 class={titleClasses}>
                {title}
              </h1>
            )}
            
            {description && (
              <p class={descriptionClasses}>
                {description}
              </p>
            )}
          </div>
          
          <div class="flex flex-col gap-6 lg:items-start items-center">
            <div class="flex gap-4 items-center flex-wrap lg:justify-start justify-center">
              {primaryButtonText && (
                <a href={getUrlRelativeToBase(primaryButtonHref)} class="inline-flex items-center gap-2 px-8 py-3 rounded-lg font-semibold no-underline transition-all duration-200 whitespace-nowrap bg-primary text-primary-foreground border border-primary shadow-sm hover:bg-primary/90 hover:-translate-y-0.5 hover:shadow-md">
                  {primaryButtonIconName && (
                    <Icon name={primaryButtonIconName} />
                  )}
                  {primaryButtonText}
                </a>
              )}
              
              {secondaryButtonText && (
                <a href={getUrlRelativeToBase(secondaryButtonHref)} class="inline-flex items-center gap-2 px-8 py-3 rounded-lg font-semibold no-underline transition-all duration-200 whitespace-nowrap bg-transparent text-foreground border border-border hover:bg-muted hover:-translate-y-0.5">
                  {secondaryButtonIconName && (
                    <Icon name={secondaryButtonIconName} />
                  )}
                  {secondaryButtonText}
                </a>
              )}
            </div>
            
            <!-- Custom slot for additional actions -->
            <div class="flex gap-4 items-center lg:justify-start justify-center">
              <slot />
            </div>
          </div>
        </div>
      </>
    )}
  </div>
</section>

<style>

  /* Hover effects for icons */
  a:hover svg {
    transform: translateX(2px);
  }
  
  /* Global slot content styling */
  .cta-custom-actions :global(.cta-link) {
    color: inherit;
    text-decoration: underline;
    text-underline-offset: 4px;
    transition: opacity 0.2s ease;
  }
  
  .cta-custom-actions :global(.cta-link:hover) {
    opacity: 0.8;
  }
  
  .cta-custom-actions :global(.cta-stats) {
    display: flex;
    gap: 2rem;
    align-items: center;
    font-size: 0.875rem;
    opacity: 0.8;
  }
  
  .cta-custom-actions :global(.cta-stat) {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
  }
  
  .cta-custom-actions :global(.cta-stat-number) {
    font-size: 1.5rem;
    font-weight: 700;
  }
  
  .cta-custom-actions :global(.cta-stat-label) {
    font-size: 0.75rem;
    opacity: 0.7;
  }
</style>
