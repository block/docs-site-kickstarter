---

/**
 * This is a base layout for all content pages backed by Markdown. It accepts a named 
 * slot "navbar", and the main slot is typically filled with Markdown content. Typical usage 
 * may look like like:
 * 
 * <ContentPageLayout title={title} 
 *   description={description} 
 *   headings={headings} 
 *   maxWidth="wide">
 *   
 *   <ComponentsNavbar slot="navbar" />
 *   <Content components={MDXComponents} />
 * 
 * </ContentPageLayout>
 * 
 * If the "navbar" slot is omitted, the left sidebar will not be present. If the 
 * "headings" are not passed, the right sidebar will not be present.
 */


import BaseLayout from "./BaseLayout.astro";
import ContentSectionOpen from "@/components/block/ContentSectionOpen.astro";
import ContentSectionClose from "@/components/block/ContentSectionClose.astro";
import type { MarkdownHeading } from 'astro';
import TableOfContents from "@/components/docs/TableOfContents.astro";
import { Breadcrumbs } from "astro-breadcrumbs";
import { Icon } from 'astro-icon/components';
import "../styles/breadcrumbs.css";

interface Props {
  title: string;
  description?: string;
  headings?: MarkdownHeading[];
  showTitleAsH1?: boolean;
  showBreadcrumbs?: boolean;
}

const { title, description, headings, showTitleAsH1 = true, showBreadcrumbs = true } = Astro.props;
---

<BaseLayout title={title} description={description}>
  <div class="relative min-h-[calc(100vh-4rem)]">
    <!-- Background Pattern with White Gradient -->
    <div class="absolute inset-0 bg-block-pattern" style="mask-image: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 10vh, rgba(255,255,255,1) 85vh, rgba(255,255,255,1) 100%);"></div>

    <!-- Navbar -->
    <div class={`
      relative mx-auto min-h-[calc(100vh-64px)] max-w-[1800px] px-6
      grid gap-6
      
      ${Astro.slots.has('navbar') && headings && headings.length > 0
        ? 'xl:grid-cols-[280px_minmax(0,1fr)_280px] max-xl:grid-cols-[280px_minmax(0,1fr)] max-lg:grid-cols-[minmax(0,1fr)]' 
        : Astro.slots.has('navbar') && (!headings || headings.length === 0)
        ? 'grid-cols-[280px_minmax(0,1fr)] max-lg:grid-cols-[minmax(0,1fr)]'
        : headings && headings.length > 0
        ? 'xl:grid-cols-[minmax(0,1fr)_280px] max-xl:grid-cols-[minmax(0,1fr)]'
        : 'grid-cols-[minmax(0,1fr)]'
      }
      
      max-md:px-4
      
      2xl:gap-6
      xl:gap-4
    `}>
      {Astro.slots.has('navbar') && (
        <nav class="relative border-r border-slate-200 dark:border-slate-700 bg-background/80 backdrop-blur-sm hidden lg:block">
          <div class="sticky top-16 h-[calc(100vh-64px)] overflow-y-auto py-6 px-6 scrollbar-thin scrollbar-thumb-slate-400 hover:scrollbar-thumb-slate-500 scrollbar-track-transparent">
            <slot name="navbar" />
          </div>
        </nav>
      )}

      <main class="min-w-0 py-8 px-10 xl:px-6 lg:px-6 md:px-4">
        <div class="prose prose-slate dark:prose-invert mx-auto"style="max-width: min(100%, 100ch);">
          
          {/** Breadcrumbs */}
          {showBreadcrumbs && (
            <div class="mb-6 mt-2">
              <Breadcrumbs 
                indexText="Home"
                mainBemClass="c-breadcrumbs"
                ariaLabel="Breadcrumb navigation"
                linkTextFormat="capitalized"
                excludeCurrentPage={false}
              >
                <span slot="separator">&nbsp;<Icon name="chevron-right" />&nbsp;</span>
                <span slot="index">
                  <Icon name="home" width={20} height={20}/>
                </span>
              </Breadcrumbs>
            </div>
          )}
          
          {/** h1 with the page title */}
          {showTitleAsH1 && (
            <h1 class="text-4xl md:text-5xl font-bold mb-8 leading-tight">{title}</h1>
          )}
          <slot />
        </div>
      </main>

      {headings && headings.length > 0 && (
        <aside class="relative border-l border-slate-200 dark:border-slate-700 bg-background/80 backdrop-blur-sm hidden xl:block">
          <div class="sticky top-16 h-fit py-6 px-6">
            <TableOfContents headings={headings} />
          </div>
        </aside>
      )}
    </div>
  </div>
</BaseLayout>

<script>
  document.querySelectorAll('.animate-on-scroll').forEach(el => el.classList.add('visible'));
</script>

<style>
  /* Background block pattern using our custom SVG */
  .bg-block-pattern {
    background-image: url('/src/icons/block-background.svg');
    background-repeat: repeat;
    background-size: 50px 50px;
  }
</style>