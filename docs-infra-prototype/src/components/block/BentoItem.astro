---
interface Props {
  title?: string;
  description?: string;
  icon?: any;
  image?: string;
  href?: string;
  className?: string;
  colSpan?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
  rowSpan?: 1 | 2 | 3 | 4;
  size?: 'small' | 'medium' | 'large' | 'tall';
}

const { 
  title,
  description,
  icon,
  image,
  href,
  className = '',
  colSpan,
  rowSpan,
  size = 'medium'
} = Astro.props;

// Auto-determine spans based on size if not explicitly set
const getSpanClasses = () => {
  let classes = ['bento-item'];
  
  if (colSpan) {
    classes.push(`span-${colSpan}`);
  } else {
    // Auto-size based on size prop
    switch (size) {
      case 'small':
        classes.push('span-3 md:span-2 sm:span-1');
        break;
      case 'large':
        classes.push('span-6 lg:span-4 md:span-4 sm:span-2');
        break;
      case 'tall':
        classes.push('span-4 row-span-2 lg:span-4 md:span-4 sm:span-2');
        break;
      default: // medium
        classes.push('span-4 lg:span-4 md:span-2 sm:span-2');
    }
  }
  
  if (rowSpan) {
    classes.push(`row-span-${rowSpan}`);
  }
  
  if (className) {
    classes.push(className);
  }
  
  return classes.join(' ');
};

const itemClasses = getSpanClasses();
const Component = href ? 'a' : 'div';
---

<Component 
  class={itemClasses}
  href={href}
  {...(href && { target: href.startsWith('http') ? '_blank' : undefined })}
  {...(href && href.startsWith('http') && { rel: 'noopener noreferrer' })}
>
  {image && (
    <div class="bento-image mb-4">
      <img src={image} alt={title || ''} class="w-full h-32 object-cover rounded-lg" />
    </div>
  )}
  
  {icon && (
    <div class="bento-icon mb-4">
      <Fragment set:html={icon} />
    </div>
  )}
  
  <div class="bento-content flex-1">
    {title && (
      <h3 class="bento-title text-lg font-semibold text-foreground mb-2">
        {title}
      </h3>
    )}
    
    {description && (
      <p class="bento-description text-sm text-muted-foreground leading-relaxed">
        {description}
      </p>
    )}
    
    <div class="bento-slot-content">
      <slot />
    </div>
  </div>
  
  {href && (
    <div class="bento-link-indicator mt-4 opacity-60 group-hover:opacity-100 transition-opacity">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
      </svg>
    </div>
  )}
</Component>

<style>
  .bento-item {
    display: flex;
    flex-direction: column;
    min-height: 200px;
    position: relative;
    overflow: hidden;
  }
  
  .bento-item.row-span-2 {
    min-height: 400px;
  }
  
  .bento-item.row-span-3 {
    min-height: 600px;
  }
  
  .bento-item.row-span-4 {
    min-height: 800px;
  }
  
  .bento-item[href] {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
  }
  
  .bento-item[href]:hover {
    text-decoration: none;
  }
  
  .bento-icon {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
  
  .bento-icon :global(svg) {
    width: 2rem;
    height: 2rem;
    color: hsl(var(--primary));
  }
  
  .bento-image img {
    transition: transform 0.2s ease-in-out;
  }
  
  .bento-item:hover .bento-image img {
    transform: scale(1.02);
  }
  
  .bento-link-indicator {
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: hsl(var(--muted-foreground));
  }
  
  .bento-slot-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  
  /* Special styling for different sizes */
  .bento-item.span-6,
  .bento-item.span-8 {
    .bento-title {
      font-size: 1.25rem;
      line-height: 1.75rem;
    }
  }
  
  .bento-item.row-span-2,
  .bento-item.row-span-3,
  .bento-item.row-span-4 {
    .bento-content {
      justify-content: center;
      text-align: center;
    }
    
    .bento-title {
      font-size: 1.5rem;
      line-height: 2rem;
      margin-bottom: 1rem;
    }
    
    .bento-description {
      font-size: 1rem;
      line-height: 1.5rem;
    }
  }
</style>
